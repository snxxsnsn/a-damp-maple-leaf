@charset "utf-8";
@import url('https://fonts.googleapis.com/css?family=Source+Code+Pro:400,700');

/**
 * Style variables
 */
$base-font-family:     'Source Code Pro', monospace !default;
$base-font-size:       14px !default;
$mobile-font-size:     13px !default;
$base-line-height:     1.5 !default;
$container-width:      90% !default;
$container-max-width:  600px !default;

/**
 * Global
 */
body { background-color: var(--background-color);  margin: 0 auto;  padding: 0;  font-family: $base-font-family;  font-size: $base-font-size;  color: var(--text-color);  text-align: left;  line-height: $base-line-height !important; }
h1, h2, h3, h4, h5, h6 { font-size: $base-font-size;  margin: 0px;  margin-top: 22px;  font-weight: bold;  color: var(--text-color); }
p, ul, ol { margin: 0px;  color: var(--text-color); }
a { text-decoration: underline;  color: var(--link-color); }
a:hover { color: var(--background-color); background-color: var(--base-color); }
@media only screen and (max-device-width: 500px) { * { font-size: $mobile-font-size !important; } }

/**
 * Layout
 */
.profile-container {
    display: flex;
    align-items: flex-start;
}

.profile-box-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 42%;
}

.profile-box {
    position: relative;
    border: 1.5px dashed;
    padding: 25px;
    width: 36%;
    height: 330px;
    text-align: left;
    margin-bottom: 10px;
    margin-top: 10px;
    margin-right: 10%;
}

.profile-box h1 {
    font-size: 18px;
}

.profile-box img {
    max-width: 85%;
    max-height: 85%;
    display: block;
    margin: 0 auto;
    border-radius: 50%;
    margin-bottom: 18px
}

.profile-box .divider {
    width: 100%;
    height: 2px;
    border-top: 1px dashed white; /* 대쉬 스타일의 테두리를 추가하고 색상을 하얀색으로 설정합니다. */
    margin-bottom: -20px;
}

/* 모바일 화면에 대한 스타일 */
@media screen and (max-width: 700px) {
    .profile-box {
        border:1px dashed white;
        border-width: 1px;
        width: 40%;
        height: 265px;
        max-height: 500px;
        padding: 15px;
        margin-top: 8px;
        margin-bottom: 7px;
    }

    .profile-box img {
        width: 100%;
        max-width: 130px;
        margin-bottom: 15px
    }

    .profile-container {
        display: flex;
        align-items: flex-start
    }

        /* 프로필 박스와 달력 사이에 공간을 둡니다 */
    .profile-box {
        margin-right: 18px;
    }

    .profile-box-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 50%;
    margin-right: 1%;
    }

     .recent-posts h2 {
        font-size: 20px !important;
        color: #fff;
    }
}

.recent-posts {
  margin-top: 20px;
}

.recent-posts h2 {
  font-size: 24px;
  margin-bottom: 10px;
}

.recent-posts ul {
  list-style: none;
  padding: 0;
}

.recent-posts li {
  margin-bottom: 10px;
}

.recent-posts a {
  color: white;
  text-decoration: none;
}

.recent-posts a:hover {
  text-decoration: underline;
}

/* 달력 스타일을 정의합니다 */
.calendar {
    width: 100%;
    border: 1px dashed white;
    padding: 15px;
    color: white;
    background-color: transparent;
    margin-top: 10px;
}

@media (min-width: 10000px) {
    .calendar {
        width:30%;
        height: 40%;
        padding: 10px
    }
}

/* 달력 테이블 스타일 */
.calendar table {
    width: 100%;
    height: 100%; /* 테이블 높이를 달력의 높이에 맞춤 */
}

/* 달력의 테이블 헤더와 셀 스타일을 정의합니다 */
.calendar th, .calendar td {
  padding: 3px; /* 셀 내부 여백을 5px로 설정 */
  text-align: center; /* 텍스트를 가운데 정렬 */
}

@media screen and (max-width: 700px) {
.calendar {
    width: 90%;
    border: 1px dashed white;
    padding: 10px;
}

    .calendar table {
    padding: -5px;
    }
    
    .calendar th,.calendar td {
    padding: 1.5px;
    text-align: center;
    }
}

/* 달력의 테이블 헤더 배경 색상을 검정으로 설정 */
.calendar th {
  background-color: black;
}

/* 달력의 테이블 셀 배경 색상을 검정으로 설정 */
.calendar td {
  background-color: black;
  color: white; /* 텍스트 색상을 흰색으로 설정 */
}

/* 일요일 셀의 텍스트 색상을 빨간색으로 설정 */
.calendar td.sunday {
  color: red;
}

/* 오늘 날짜 셀의 배경을 반투명 흰색 원으로 설정 */
.calendar td.today {
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 50%; /* 셀을 원형으로 만듦 */
}

.audio-player-container {
    position: relative;
    width: 100%;
    overflow: hidden; /* 배경 텍스트가 영역 밖으로 나가지 않도록 설정 */
}

.audio-player::before {
    content: '⋆ ｡ﾟ ☁︎ ｡⋆ ｡ ﾟ ☾  ｡ ⋆ \A . • . ° *★ ☁︎⋆ ｡ﾟ \A . • . * • ⋆';
    position: absolute;
    top: 50%;
    left: 52%;
    transform: translate(-50%, -50%);
    white-space: pre;
    text-align: center;
    font-size: 40px; /* 배경 텍스트 크기 조절 */
    color: rgba(255, 255, 255, 0.37); /* 배경 텍스트 투명도 조절 */
    z-index: -1; /* 오디오 플레이어 뒤에 배치 */
    pointer-events: none; /* 배경 텍스트가 클릭을 방해하지 않도록 설정 */
    max-width: 100%; /* 부모 요소의 너비를 초과하지 않도록 설정 */
    max-height: 100%; /* 부모 요소의 높이를 초과하지 않도록 설정 */
    clip-path: inset(0 0 0 0); /* 텍스트가 요소 밖으로 넘치지 않도록 설정 */
    overflow: hidden; /* 텍스트가 요소 밖으로 넘치지 않도록 설정 */
}

.audio-player {
    position: relative;
    z-index: 1; /* 배경 텍스트 앞에 배치 */
    color: white;
    font-family: sans-serif;
    text-align: center;
    width: 100%;
    height: auto;
    background-color: transparent;
    padding: 20px;
    border-radius: 10px;
    border: 1.5px dashed white;
    margin-top: 40px;
    transition: box-shadow 0.7s ease;
}

.audio-player.playing {
    box-shadow: 0 0 55px rgba(130,180,255,0.5);
    transition: box-shadow 0.6s ease;
    animation: shadowPulse 2.2s infinite alternate
}

@keyframes shadowPulse {
    0% {
        box-shadow: 0 0 50px rgba(160,220,220,0.5);
    }

    50% {
        box-shadow: 0 0 70px rgba(160,200,255,0.5);
    }

    100% {
        box-shadow: 0 0 50px rgba(200,190,255,0.5);
    }
}

.song-title {
    overflow: hidden;
    white-space: nowrap;
    max-width: 30vw;
    margin-left: 10%;
    margin-right: 10%;
    font-size: 14px;
    margin-bottom: 10px;
    text-overflow: ellipsis; /* 텍스트가 넘치면 생략 부호로 표시 */
}

.controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    margin-top: 10px;
}

.time-controls {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    margin-top: 10px;
}

.current-time,
.duration {
    flex: none;
}

.progress-bar {
    width: calc(100% - 100px); /* Adjust width considering the space needed for current-time and duration */
    margin: 0 10px;
    background: transparent;
    flex-grow: 1;
    height: 2px;
    -webkit-appearance: none;
    appearance: none;
}

.progress-bar::-webkit-slider-runnable-track {
    background: white;
    height: 3px;
}

.progress-bar::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    background: white;
    border-radius: 50%;
    cursor: pointer;
    margin-top: -6px;
}

.progress-bar::-moz-range-track {
    background: white;
    height: 5px;
}

.progress-bar::-moz-range-thumb {
    width: 15px;
    height: 15px;
    background: white;
    border-radius: 50%;
    cursor: pointer;
}

.buttons {
    display: flex;
    justify-content: center;
    margin-top: 10px;
    width: 100%; /* 버튼 영역을 가운데 정렬하기 위해 너비를 설정합니다. */
    margin-left: auto; /* 좌우 여백을 동일하게 하기 위해 왼쪽 여백을 자동으로 설정합니다. */
    margin-right: auto; /* 좌우 여백을 동일하게 하기 위해 오른쪽 여백을 자동으로 설정합니다. */
}

.control-button {
    background: none;
    border: none;
    color: white;
    font-size: 20px;
    cursor: pointer;
    outline: none;
    transition: color 0.3s;
}

@media screen and (max-width: 700px) {
    .audio-player::before {
    top: 43%;
    left: 50%;
    white-space: pre;
    text-align: center;
    font-size: 38px; /* 배경 텍스트 크기 조절 */
    max-width: 100%; /* 부모 요소의 너비를 초과하지 않도록 설정 */
    max-height: 100%; /* 부모 요소의 높이를 초과하지 않도록 설정 */
    clip-path: inset(0 0 0 0); /* 텍스트가 요소 밖으로 넘치지 않도록 설정 */
    overflow: hidden; /* 텍스트가 요소 밖으로 넘치지 않도록 설정 */
    }   
    
    .audio-player {
        width: 85%;
        margin-top: 15%;
        padding: 15px;
    }

    .controls {
        margin-top: -3px;
    }

    .progress-bar {
        width: calc(100% - 60px); /* Adjusted for smaller screens */
        margin: 0 10px;
    }

    .progress-bar::-webkit-slider-runnable-track {
        background: white;
        height: 3px;
    }

    .progress-bar::-webkit-slider-thumb {
        -webkit-appearance: none;
        width: 12px;
        height: 12px;
        margin-top: -4px;
    }

    .buttons {
        margin-top: 5px;
    }
}


.container { width: $container-width;  max-width: $container-max-width;  margin-right: auto;  margin-left: auto; }
p { word-wrap: break-word;  word-break: break-word;  white-space: pre-wrap; margin-bottom: 15px; }
footer { color: var(--text-color);  border-top: var(--border);  margin: 20px auto 15px;  padding-top: 10px;  text-align: right; }
header { margin-top: 25px;  margin-bottom: 10px; }
header p { text-align: left;  margin: 0; }
footer { margin-bottom: 20px; }

/**
 * Highlight/Markup
 */
::selection { background: var(--selection-background);  color: var(--selection-text); }
::-moz-selection { background: var(--selection-background);  color: var(--selection-text); }

/**
 * Lists
 */
:not(.menu) > ul { list-style: none;  padding-left: 0; }
:not(.menu) > ul { list-style-type: none; }
:not(.menu) > ul > li:before { content: "-";  margin-right: 9px; }

/**
 * Header/Navigation
 */
.menu { border-top: var(--border);  border-bottom: var(--border);  margin-bottom: 25px; }
.menu ul { margin-top: 12px;  margin-bottom: 12px;  padding-left: 0px;  list-style-type: none;  text-align: right; }
.menu ul li { display: inline;  margin-left: 10px; }
.menu ul li a { text-decoration: none;  color: var(--text-color); }
.menu ul li a:hover { text-decoration: none; color: var(--background-color); background-color: var(--base-color); }

/**
 * Form
 */
input, select, textarea { padding: 0;  margin: 0;  -webkit-appearance: none;  -webkit-border-radius: 0;  border: none; }
input[type=text], select, textarea { width: 100%;  resize: none;  background-color: var(--background-color);  color: var(--text-color);  caret-color: var(--text-color);  font-size: $base-font-size;  font-family: $base-font-family;  line-height: $base-line-height; }
input, select, textarea, textarea::-webkit-input-placeholder { text-indent: 0px; }
::placeholder { color: var(--placeholder-color);  opacity: 1; }
:-ms-input-placeholder { color: var(--placeholder-color); }
::-ms-input-placeholder { color: var(--placeholder-color); }
input[type=submit] { font-size: $base-font-size;  font-family: $base-font-family;  line-height: $base-line-height;  cursor: pointer;  color: var(--link-color);  background-color: var(--background-color); }
input[type=submit]:hover { color: var(--background-color); background-color: var(--base-color); }
*:focus { outline: none; }
textarea { vertical-align: top; }

/**
 * Code and syntax highlighting
 */
.lineno { color: var(--code-color-1); margin-right: 15px; }
figure.highlight { margin: 5px 0; }
pre { background-color: var(--background-color);  border: none;  padding: 0;  margin: 0;  overflow:auto;  font-size: $base-font-size;  color: var(--text-color);  line-height: 1.7 !important;  font-family: $base-font-family !important; }
.highlight .hll { background-color: var(--code-color-2); }
.highlight .c { color: var(--code-color-1); font-style: italic } /* Comment */
.highlight .err { color: var(--code-color-3); background-color: var(--code-color-4); } /* Error */
.highlight .k { color: var(--code-color-5); } /* Keyword */
.highlight .cm { color: var(--code-color-1); font-style: italic } /* Comment.Multiline */
.highlight .cp { color: var(--code-color-6); } /* Comment.Preproc */
.highlight .c1 { color: var(--code-color-1); font-style: italic } /* Comment.Single */
.highlight .cs { color: var(--code-color-5); font-style: italic } /* Comment.Special */
.highlight .gd { color: var(--code-color-7); } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: var(--code-color-7); } /* Generic.Error */
.highlight .gh { color: var(--code-color-8); font-weight: bold } /* Generic.Heading */
.highlight .gi { color: var(--code-color-9); } /* Generic.Inserted */
.highlight .go { color: var(--code-color-10); } /* Generic.Output */
.highlight .gp { color: var(--code-color-11); } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: var(--code-color-12); font-weight: bold } /* Generic.Subheading */
.highlight .gt { color: var(--code-color-7); } /* Generic.Traceback */
.highlight .kc { color: var(--code-color-5); } /* Keyword.Constant */
.highlight .kd { color: var(--code-color-5); } /* Keyword.Declaration */
.highlight .kn { color: var(--code-color-5); } /* Keyword.Namespace */
.highlight .kp { color: var(--code-color-5); } /* Keyword.Pseudo */
.highlight .kr { color: var(--code-color-5); } /* Keyword.Reserved */
.highlight .kt { color: var(--code-color-13); } /* Keyword.Type */
.highlight .m { color: var(--code-color-14); } /* Literal.Number */
.highlight .s { color: var(--code-color-15); } /* Literal.String */
.highlight .na { color: var(--code-color-16); } /* Name.Attribute */
.highlight .nb { color: var(--code-color-13); } /* Name.Builtin */
.highlight .nc { color: var(--code-color-9); text-decoration: underline } /* Name.Class */
.highlight .no { color: var(--code-color-7); } /* Name.Constant */
.highlight .nd { color: var(--code-color-10); } /* Name.Decorator */
.highlight .ni { color: var(--code-color-17); font-weight: bold } /* Name.Entity */
.highlight .nf { color: var(--code-color-9); } /* Name.Function */
.highlight .nn { color: var(--code-color-13); text-decoration: underline } /* Name.Namespace */
.highlight .nt { color: var(--code-color-16); font-weight: bold } /* Name.Tag */
.highlight .nv { color: var(--code-color-7); } /* Name.Variable */
.highlight .ow { color: var(--code-color-5); } /* Operator.Word */
.highlight .w { color: var(--code-color-18); } /* Text.Whitespace */
.highlight .mf { color: var(--code-color-14); } /* Literal.Number.Float */
.highlight .mh { color: var(--code-color-14); } /* Literal.Number.Hex */
.highlight .mi { color: var(--code-color-14); } /* Literal.Number.Integer */
.highlight .mo { color: var(--code-color-14); } /* Literal.Number.Oct */
.highlight .sb { color: var(--code-color-15); } /* Literal.String.Backtick */
.highlight .sc { color: var(--code-color-15); } /* Literal.String.Char */
.highlight .sd { color: var(--code-color-15); } /* Literal.String.Doc */
.highlight .s2 { color: var(--code-color-15); } /* Literal.String.Double */
.highlight .se { color: var(--code-color-15); } /* Literal.String.Escape */
.highlight .sh { color: var(--code-color-15); } /* Literal.String.Heredoc */
.highlight .si { color: var(--code-color-15); } /* Literal.String.Interpol */
.highlight .sx { color: var(--code-color-15); } /* Literal.String.Other */
.highlight .sr { color: var(--code-color-14); } /* Literal.String.Regex */
.highlight .s1 { color: var(--code-color-15); } /* Literal.String.Single */
.highlight .ss { color: var(--code-color-5); } /* Literal.String.Symbol */
.highlight .bp { color: var(--code-color-13); } /* Name.Builtin.Pseudo */
.highlight .vc { color: var(--code-color-7); } /* Name.Variable.Class */
.highlight .vg { color: var(--code-color-7); } /* Name.Variable.Global */
.highlight .vi { color: var(--code-color-7); } /* Name.Variable.Instance */
.highlight .il { color: var(--code-color-14); } /* Literal.Number.Integer.Long */

